1
00:00:00,000 --> 00:00:04,000
在此视频中，我们将查看解决方案检查器。

2
00:00:04,000 --> 00:00:10,000
因此，解决方案检查器适用于可以从环境中导出的非管理解决方案。

3
00:00:10,000 --> 00:00:16,000
默认解决方案不能从环境中导出，因此解决方案检查器对此不起作用。

4
00:00:16,000 --> 00:00:23,000
因此，我要去我不受管理的解决方案，我将单击点点点，以及解决方案检查器并运行。

5
00:00:23,000 --> 00:00:26,000
您还可以在顶部有解决方案检查器。

6
00:00:26,000 --> 00:00:35,000
因此，现在您可以看到解决方案检查器正在运行，这将需要几分钟，如果您愿意，可以取消它。

7
00:00:35,000 --> 00:00:39,000
现在，当它运行时，让我谈谈解决方案检查器。

8
00:00:39,000 --> 00:00:42,000
因此，解决方案检查器主要关注数据经文。

9
00:00:42,000 --> 00:00:43,000
这是为什么？

10
00:00:43,000 --> 00:00:48,000
好吧，您创建了由模型驱动的应用程序。

11
00:00:48,000 --> 00:00:54,000
您没有在应用程序检查器的帆布应用程序中获得好处。

12
00:00:54,000 --> 00:01:01,000
因此，解决方案检查器的作用是检查与模型相关的应用程序可能会影响它的事物。

13
00:01:01,000 --> 00:01:07,000
而且因为我们谈论的是形式，视图和图表，仪表板以及业务程序以及网站图，所以

14
00:01:07,000 --> 00:01:10,000
它的作用是检查数据经文。

15
00:01:10,000 --> 00:01:16,000
它检查数据诗插件，数据经文自定义工作流程，

16
00:01:16,000 --> 00:01:21,000
数据经文Web资源和数据经文配置。

17
00:01:21,000 --> 00:01:27,000
这一切都可以确保您的模型驱动的应用程序尽可能地工作。

18
00:01:27,000 --> 00:01:29,000
因此，让我们分解一下。

19
00:01:29,000 --> 00:01:33,000
因此，首先是所有插件和自定义工作流活动。

20
00:01:33,000 --> 00:01:36,000
因此，其中一些将是很高的水平。

21
00:01:36,000 --> 00:01:38,000
因此，如果您不了解，请不要担心。

22
00:01:38,000 --> 00:01:41,000
通过编程选择所有列。

23
00:01:41,000 --> 00:01:44,000
因此，如果您只选择所有列，那通常不好。

24
00:01:44,000 --> 00:01:53,000
是否有重复的数据经文插件注册使用插件和工作流程中的批处理请求类型。

25
00:01:53,000 --> 00:01:55,000
这些是在那里寻找的东西。

26
00:01:55,000 --> 00:01:59,000
对于Web资源，我们正在谈论HTML和JavaScript。

27
00:01:59,000 --> 00:02:02,000
因此，例如使用模型对话。

28
00:02:02,000 --> 00:02:06,000
因此，这是您必须单击确定或取消才能摆脱的对话。

29
00:02:06,000 --> 00:02:11,000
您是否在其他中使用了绝对数据经文的终点URL？

30
00:02:11,000 --> 00:02:12,000
这是这个网址。

31
00:02:12,000 --> 00:02:13,000
确切地。

32
00:02:13,000 --> 00:02:20,000
您是否正在使用评估或警报等功能或功能？

33
00:02:20,000 --> 00:02:26,000
我们正在查看配置，例如SDK消息步骤，并查看Canvas应用程序。

34
00:02:26,000 --> 00:02:29,000
例如，是否有正式问题？

35
00:02:29,000 --> 00:02:32,000
加载花费太长吗？

36
00:02:32,000 --> 00:02:34,000
并且应用程序控件太多了吗？

37
00:02:34,000 --> 00:02:37,000
也许您可以以这种方式提高性能。

38
00:02:37,000 --> 00:02:39,000
因此，让我们回到解决方案。

39
00:02:39,000 --> 00:02:46,000
因此，解决方案检查器很好，它说它还没有完成，但实际上让我们以这种方式去。

40
00:02:46,000 --> 00:02:49,000
您可以看到我们现在可以查看结果。

41
00:02:49,000 --> 00:02:55,000
因此，这是结果，我们有一些可能想在Canvas应用中查看的内容。

42
00:02:55,000 --> 00:03:04,000
实际上，其中许多会在应用程序检查器的可访问性区域中找到。

43
00:03:04,000 --> 00:03:08,000
因此，解决方案检查器，它看着我们的污垢。

44
00:03:08,000 --> 00:03:19,000
它着眼于插件和自定义工作流程，HTML和JavaScript
Web资源和配置，以尝试改善模型驱动的应用程序。

45
00:03:19,000 --> 00:03:28,000
它还可以查看一些诸如帆布应用程序，公式问题，延迟负载以及应用程序控制是否太多的事情。

46
00:03:28,000 --> 00:03:35,000
因此，如果是这样，您可能需要将画布应用程序分解为两个较小的应用程序。

47
00:03:35,000 --> 00:03:38,000
最后，您可以看到它包含的列。

48
00:03:38,000 --> 00:03:43,000
因此，问题，这就是它的标题，类别的严重性。

49
00:03:43,000 --> 00:03:50,000
那么它真的很严重还是低，中等，类别？

50
00:03:50,000 --> 00:03:57,000
实际上，另一个严重性是信息性，组成部分和位置。

51
00:03:57,000 --> 00:04:00,000
您可能还有其他东西，例如指导。

52
00:04:00,000 --> 00:04:05,000
最后，您可以下载这些结果，以便将其下载到zip文件中。

53
00:04:05,000 --> 00:04:10,000
因此，您可以看到它包含CSV，逗号，分离器值和电子表格。

54
00:04:10,000 --> 00:04:17,000
您还可以通过回到解决方案并转到解决方案检查器，下载结果来做到这一点。

