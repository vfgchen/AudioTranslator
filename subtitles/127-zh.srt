1
00:00:00,000 --> 00:00:04,000
您好，在本节中，我们正在考虑测试。

2
00:00:04,000 --> 00:00:07,360
因此，您拥有帆布应用程序，拥有模型驱动的应用程序，您有了您的

3
00:00:07,360 --> 00:00:09,400
地板全部设置。

4
00:00:09,400 --> 00:00:10,400
但是现在呢？

5
00:00:10,400 --> 00:00:14,120
好吧，您需要确保它们正常工作。

6
00:00:14,120 --> 00:00:17,640
因此，您可以进行多种不同类型的测试。

7
00:00:17,640 --> 00:00:20,880
例如，有单位测试。

8
00:00:20,880 --> 00:00:27,520
例如，特定功能是否像排序功能一样正确地工作？

9
00:00:27,520 --> 00:00:30,160
因此，它可能是一个功能，可能是一些功能。

10
00:00:30,160 --> 00:00:32,920
这通常是由制造它的人完成的。

11
00:00:32,920 --> 00:00:36,160
它可以是黑匣子或白盒子。

12
00:00:36,160 --> 00:00:37,160
我是什么意思？

13
00:00:37,160 --> 00:00:40,440
黑匣子测试将软件视为密封盒。

14
00:00:40,440 --> 00:00:46,120
因此，您将自己不了解软件的工作方式。

15
00:00:46,120 --> 00:00:51,520
您只需知道该功能应该做什么，并查看是否确实可以检查功能。

16
00:00:51,520 --> 00:00:58,320
因此，它要求测试仪具有具有各种输入和输出的测试用例

17
00:00:58,320 --> 00:00:59,420
应该是。

18
00:00:59,420 --> 00:01:03,320
因此，不需要编程知识。

19
00:01:03,320 --> 00:01:09,720
现在由于缺乏有关该软件在黑匣子测试中工作的知识，

20
00:01:09,720 --> 00:01:14,840
测试仪可能会多次测试相同的过程，也可能根本无法测试部分。

21
00:01:14,840 --> 00:01:19,160
毕竟，他们不一定知道他们在寻找什么

22
00:01:19,160 --> 00:01:22,960
事实，有什么总功能。

23
00:01:22,960 --> 00:01:26,920
现在，白盒测试着眼于程序的内部工作。

24
00:01:26,920 --> 00:01:30,240
因此，在这里您可以测试单个单元。

25
00:01:30,240 --> 00:01:35,600
您还可以进行端到端测试，也称为集成测试。

26
00:01:35,600 --> 00:01:39,960
那么总体系统工作正常吗？

27
00:01:39,960 --> 00:01:42,960
或者也许只有几个单位。

28
00:01:42,960 --> 00:01:49,360
现在，有了白盒测试，您需要了解内部工作。

29
00:01:49,360 --> 00:01:50,360
原因？

30
00:01:50,360 --> 00:01:55,200
这样您就可以沿着每个路径，每个代码路径，每个分支，都可以测试每个路径

31
00:01:55,200 --> 00:01:56,760
一些功能。

32
00:01:56,760 --> 00:02:02,720
但是，如果您只用一个输入测试一次一个分支，则可能不会注意到

33
00:02:02,720 --> 00:02:06,320
它在不同的输入方面的工作方式不同。

34
00:02:06,320 --> 00:02:11,600
现在，在您进行质量保证测试时，其他测试过程。

35
00:02:11,600 --> 00:02:15,520
因此，这可以由制造商以外的其他人来完成，因此可以在内部完成或

36
00:02:15,520 --> 00:02:16,520
最终用户。

37
00:02:16,520 --> 00:02:21,000
因此，它可能是单元测试，也可能是端到端测试。

38
00:02:21,000 --> 00:02:26,480
您可以使用各种情况的各种用户，并说您期望

39
00:02:26,480 --> 00:02:29,000
输入和输出，它们是否匹配？

40
00:02:29,000 --> 00:02:36,280
也许您可以要求您的最终用户提出一些意外的价值。

41
00:02:36,280 --> 00:02:44,800
例如，-1000的费用测试真的可以接受还是2001年的日期？

42
00:02:44,800 --> 00:02:48,880
然后，您将进行用户接受测试，即UAT。

43
00:02:48,880 --> 00:02:53,520
这是由用户或团队完成的，它总是黑匣子。

44
00:02:53,520 --> 00:02:58,080
所以没有话，最终用户不知道编程的细节。

45
00:02:58,080 --> 00:03:01,280
因此，这是它上线之前或之后的最后阶段。

46
00:03:01,280 --> 00:03:05,560
基本上，这是用户期望的系统吗？

47
00:03:05,560 --> 00:03:07,240
因此，不要提供其他教练。

48
00:03:07,240 --> 00:03:08,640
它是直观的吗？

49
00:03:08,640 --> 00:03:13,720
您知道可以按下此按钮查看帐户上升和此按钮

50
00:03:13,720 --> 00:03:15,440
查看帐户下降？

51
00:03:15,440 --> 00:03:16,880
那是直观的吗？

52
00:03:16,880 --> 00:03:21,480
如果卡住了，他们期望发生什么？

53
00:03:21,480 --> 00:03:24,280
因此，这是测试过程。

54
00:03:24,280 --> 00:03:30,000
因此，您可以进行特定功能的单元测试，集成端到端测试，质量

55
00:03:30,000 --> 00:03:33,360
保证测试和用户接受测试。

56
00:03:33,360 --> 00:03:39,680
它们可能是黑匣子，不知道您的内部编码或白盒

57
00:03:39,680 --> 00:03:42,240
可以查看程序的内部工作。

